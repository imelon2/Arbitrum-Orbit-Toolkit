import { init, ABI_NITRO_ABI_ROOT, ABI_BRIDGE_ABI_ROOT, ABI_ROOT } from "../src/config";
import { getRevertData, decodeRevertData } from "../src/modules/revertParser.m";
import { readJSONFilesInFolder } from "../src/modules/abiReader";
import { logSuccessMsg, logNullTxMsg, logErrorMsg } from "../src/utils/log";

/**
 * CLI ts-node debug/parseErrorMsg.ts
 */
async function main() {
  try {
    return decodeRevertData("0x07c266e3000000000000000000000000902b3e5f8f19571859f4ab1003b960a5df693aff0000000000000000000000006e244cd02bbb8a6dbd7f626f05b2ef82151ab502000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d644352a429f3ff3d21128820dcbc53e063685b1000000000000000000000000d644352a429f3ff3d21128820dcbc53e063685b100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000002e42e567b3600000000000000000000000052419051b1406766871d00561df6055b7fb11c04000000000000000000000000d644352a429f3ff3d21128820dcbc53e063685b1000000000000000000000000d644352a429f3ff3d21128820dcbc53e063685b1000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000006644b6172676f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003444b41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", [ABI_NITRO_ABI_ROOT,ABI_BRIDGE_ABI_ROOT,ABI_ROOT]);
    const {provider} = init("L1")
    
    const txHash = "0xde50445be66d92fa8c71f05119a7286bff8100cb374f2dc012145ac85451d09c";
    const receipt = await provider.getTransactionReceipt(txHash);

    if (receipt.status == 1) {
      console.log(receipt);
      return logSuccessMsg();
    } else if (receipt == null) {
      return logNullTxMsg();
    }

    const data = await getRevertData(txHash, provider);

    if (data == null) {
      return logNullTxMsg(txHash);
    }

    // return decodeRevertData(data, [ABI_NITRO_ABI_ROOT,ABI_BRIDGE_ABI_ROOT,ABI_ROOT]);
  } catch (error: any) {
    if (error.data == "0x") {
      const sysError = JSON.parse(error.error.body).error.message
      return logErrorMsg(error.reason, error.data,sysError,undefined);
    } else {
      throw error;
    }
  }
}

main();
